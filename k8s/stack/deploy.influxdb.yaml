apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
        - name: influxdb
          image: influxdb:1.8
          env:
            - name: INFLUXDB_ADMIN_USER
              value: admin
            - name: INFLUXDB_ADMIN_PASSWORD
              value: admin
            - name: INFLUXDB_DB
              value: myk6db
            - name: INFLUXDB_USER
              value: admin
            - name: INFLUXDB_USER_PASSWORD
              value: admin
            - name: INFLUXDB_DATA_ENGINE
              value: tsm1
            - name: INFLUXDB_REPORTING_DISABLED
              value: 'false'
            - name: INFLUXDB_GRAPHITE_0_ENABLED
              value: 'true'
            - name: INFLUXDB_GRAPHITE_0_DATABASE
              value: graphite
            - name: INFLUXDB_GRAPHITE_0_BIND_ADDRESS
              value: :2003
            - name: INFLUXDB_GRAPHITE_PROTOCOL
              value: tcp
            - name: INFLUXDB_GRAPHITE_BATCH_SIZE
              value: '1000'
          ports:
            - containerPort: 8086
          resources:
            limits:
              memory: '4Gi'
              cpu: 2
            requests:
              memory: '1Gi'
              cpu: 1
          volumeMounts:
            - mountPath: /var/lib/influxdb
              name: var-lib-influxdb
      serviceAccount: prometheus
      serviceAccountName: prometheus
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: var-lib-influxdb
          persistentVolumeClaim:
            claimName: influxdb
